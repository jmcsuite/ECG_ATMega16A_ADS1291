
ExamenParcial2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000574  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000574  00000608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006e  0080006e  00000616  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000616  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000648  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018bf  00000000  00000000  0000078c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089e  00000000  00000000  0000204b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a8b  00000000  00000000  000028e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a8  00000000  00000000  00003374  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000515  00000000  00000000  0000361c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e64  00000000  00000000  00003b31  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 a5 01 	jmp	0x34a	; 0x34a <__vector_14>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__vector_19>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e7       	ldi	r30, 0x74	; 116
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 37       	cpi	r26, 0x7B	; 123
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 81 02 	call	0x502	; 0x502 <main>
  8a:	0c 94 b8 02 	jmp	0x570	; 0x570 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <uno_en_bit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	fc 01       	movw	r30, r24
  94:	20 81       	ld	r18, Z
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <uno_en_bit+0xe>
  9c:	88 0f       	add	r24, r24
  9e:	99 1f       	adc	r25, r25
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <uno_en_bit+0xa>
  a4:	82 23       	and	r24, r18
  a6:	08 95       	ret

000000a8 <saca_uno>:
  a8:	fc 01       	movw	r30, r24
  aa:	40 81       	ld	r20, Z
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <saca_uno+0xe>
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <saca_uno+0xa>
  ba:	24 2b       	or	r18, r20
  bc:	20 83       	st	Z, r18
  be:	08 95       	ret

000000c0 <saca_cero>:
  c0:	fc 01       	movw	r30, r24
  c2:	90 81       	ld	r25, Z
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <saca_cero+0xe>
  ca:	22 0f       	add	r18, r18
  cc:	33 1f       	adc	r19, r19
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <saca_cero+0xa>
  d2:	20 95       	com	r18
  d4:	29 23       	and	r18, r25
  d6:	20 83       	st	Z, r18
  d8:	08 95       	ret

000000da <busy_flag>:
  da:	84 b3       	in	r24, 0x14	; 20
  dc:	80 7f       	andi	r24, 0xF0	; 240
  de:	84 bb       	out	0x14, r24	; 20
  e0:	64 e0       	ldi	r22, 0x04	; 4
  e2:	85 e3       	ldi	r24, 0x35	; 53
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
  ea:	65 e0       	ldi	r22, 0x05	; 5
  ec:	85 e3       	ldi	r24, 0x35	; 53
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
  f4:	66 e0       	ldi	r22, 0x06	; 6
  f6:	85 e3       	ldi	r24, 0x35	; 53
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
  fe:	8f e1       	ldi	r24, 0x1F	; 31
 100:	9e e4       	ldi	r25, 0x4E	; 78
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <busy_flag+0x28>
 106:	00 c0       	rjmp	.+0      	; 0x108 <busy_flag+0x2e>
 108:	00 00       	nop
 10a:	66 e0       	ldi	r22, 0x06	; 6
 10c:	85 e3       	ldi	r24, 0x35	; 53
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 114:	63 e0       	ldi	r22, 0x03	; 3
 116:	83 e3       	ldi	r24, 0x33	; 51
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 49 00 	call	0x92	; 0x92 <uno_en_bit>
 11e:	81 11       	cpse	r24, r1
 120:	19 c0       	rjmp	.+50     	; 0x154 <busy_flag+0x7a>
 122:	9a e1       	ldi	r25, 0x1A	; 26
 124:	9a 95       	dec	r25
 126:	f1 f7       	brne	.-4      	; 0x124 <busy_flag+0x4a>
 128:	00 c0       	rjmp	.+0      	; 0x12a <busy_flag+0x50>
 12a:	66 e0       	ldi	r22, 0x06	; 6
 12c:	85 e3       	ldi	r24, 0x35	; 53
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 134:	8f e1       	ldi	r24, 0x1F	; 31
 136:	9e e4       	ldi	r25, 0x4E	; 78
 138:	01 97       	sbiw	r24, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <busy_flag+0x5e>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <busy_flag+0x64>
 13e:	00 00       	nop
 140:	66 e0       	ldi	r22, 0x06	; 6
 142:	85 e3       	ldi	r24, 0x35	; 53
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 14a:	9a e1       	ldi	r25, 0x1A	; 26
 14c:	9a 95       	dec	r25
 14e:	f1 f7       	brne	.-4      	; 0x14c <busy_flag+0x72>
 150:	00 c0       	rjmp	.+0      	; 0x152 <busy_flag+0x78>
 152:	d0 cf       	rjmp	.-96     	; 0xf4 <busy_flag+0x1a>
 154:	8a e1       	ldi	r24, 0x1A	; 26
 156:	8a 95       	dec	r24
 158:	f1 f7       	brne	.-4      	; 0x156 <busy_flag+0x7c>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <busy_flag+0x82>
 15c:	66 e0       	ldi	r22, 0x06	; 6
 15e:	85 e3       	ldi	r24, 0x35	; 53
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 166:	8f e1       	ldi	r24, 0x1F	; 31
 168:	9e e4       	ldi	r25, 0x4E	; 78
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <busy_flag+0x90>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <busy_flag+0x96>
 170:	00 00       	nop
 172:	66 e0       	ldi	r22, 0x06	; 6
 174:	85 e3       	ldi	r24, 0x35	; 53
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 17c:	9a e1       	ldi	r25, 0x1A	; 26
 17e:	9a 95       	dec	r25
 180:	f1 f7       	brne	.-4      	; 0x17e <busy_flag+0xa4>
 182:	00 c0       	rjmp	.+0      	; 0x184 <busy_flag+0xaa>
 184:	64 e0       	ldi	r22, 0x04	; 4
 186:	85 e3       	ldi	r24, 0x35	; 53
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 18e:	65 e0       	ldi	r22, 0x05	; 5
 190:	85 e3       	ldi	r24, 0x35	; 53
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 198:	84 b3       	in	r24, 0x14	; 20
 19a:	8f 60       	ori	r24, 0x0F	; 15
 19c:	84 bb       	out	0x14, r24	; 20
 19e:	08 95       	ret

000001a0 <LCD_CMD_8BIT>:
 1a0:	cf 93       	push	r28
 1a2:	c8 2f       	mov	r28, r24
 1a4:	82 95       	swap	r24
 1a6:	8f 70       	andi	r24, 0x0F	; 15
 1a8:	85 bb       	out	0x15, r24	; 21
 1aa:	64 e0       	ldi	r22, 0x04	; 4
 1ac:	85 e3       	ldi	r24, 0x35	; 53
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 1b4:	65 e0       	ldi	r22, 0x05	; 5
 1b6:	85 e3       	ldi	r24, 0x35	; 53
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 1be:	66 e0       	ldi	r22, 0x06	; 6
 1c0:	85 e3       	ldi	r24, 0x35	; 53
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 1c8:	8f e1       	ldi	r24, 0x1F	; 31
 1ca:	9e e4       	ldi	r25, 0x4E	; 78
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <LCD_CMD_8BIT+0x2c>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_CMD_8BIT+0x32>
 1d2:	00 00       	nop
 1d4:	66 e0       	ldi	r22, 0x06	; 6
 1d6:	85 e3       	ldi	r24, 0x35	; 53
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 1de:	cf 70       	andi	r28, 0x0F	; 15
 1e0:	c5 bb       	out	0x15, r28	; 21
 1e2:	64 e0       	ldi	r22, 0x04	; 4
 1e4:	85 e3       	ldi	r24, 0x35	; 53
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 1ec:	65 e0       	ldi	r22, 0x05	; 5
 1ee:	85 e3       	ldi	r24, 0x35	; 53
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 1f6:	66 e0       	ldi	r22, 0x06	; 6
 1f8:	85 e3       	ldi	r24, 0x35	; 53
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 200:	8f e1       	ldi	r24, 0x1F	; 31
 202:	9e e4       	ldi	r25, 0x4E	; 78
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 208:	00 c0       	rjmp	.+0      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 20a:	00 00       	nop
 20c:	66 e0       	ldi	r22, 0x06	; 6
 20e:	85 e3       	ldi	r24, 0x35	; 53
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 216:	0e 94 6d 00 	call	0xda	; 0xda <busy_flag>
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <LCD_DATO_8bit>:
 21e:	cf 93       	push	r28
 220:	c8 2f       	mov	r28, r24
 222:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 226:	8f 5f       	subi	r24, 0xFF	; 255
 228:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end>
 22c:	8c 2f       	mov	r24, r28
 22e:	82 95       	swap	r24
 230:	8f 70       	andi	r24, 0x0F	; 15
 232:	85 bb       	out	0x15, r24	; 21
 234:	64 e0       	ldi	r22, 0x04	; 4
 236:	85 e3       	ldi	r24, 0x35	; 53
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 23e:	65 e0       	ldi	r22, 0x05	; 5
 240:	85 e3       	ldi	r24, 0x35	; 53
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 248:	66 e0       	ldi	r22, 0x06	; 6
 24a:	85 e3       	ldi	r24, 0x35	; 53
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 252:	8f e1       	ldi	r24, 0x1F	; 31
 254:	9e e4       	ldi	r25, 0x4E	; 78
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <LCD_DATO_8bit+0x38>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <LCD_DATO_8bit+0x3e>
 25c:	00 00       	nop
 25e:	66 e0       	ldi	r22, 0x06	; 6
 260:	85 e3       	ldi	r24, 0x35	; 53
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 268:	cf 70       	andi	r28, 0x0F	; 15
 26a:	c5 bb       	out	0x15, r28	; 21
 26c:	64 e0       	ldi	r22, 0x04	; 4
 26e:	85 e3       	ldi	r24, 0x35	; 53
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 276:	65 e0       	ldi	r22, 0x05	; 5
 278:	85 e3       	ldi	r24, 0x35	; 53
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 280:	66 e0       	ldi	r22, 0x06	; 6
 282:	85 e3       	ldi	r24, 0x35	; 53
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	0e 94 54 00 	call	0xa8	; 0xa8 <saca_uno>
 28a:	8f e1       	ldi	r24, 0x1F	; 31
 28c:	9e e4       	ldi	r25, 0x4E	; 78
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <LCD_DATO_8bit+0x70>
 292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_DATO_8bit+0x76>
 294:	00 00       	nop
 296:	66 e0       	ldi	r22, 0x06	; 6
 298:	85 e3       	ldi	r24, 0x35	; 53
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 60 00 	call	0xc0	; 0xc0 <saca_cero>
 2a0:	0e 94 6d 00 	call	0xda	; 0xda <busy_flag>
 2a4:	cf 91       	pop	r28
 2a6:	08 95       	ret

000002a8 <LCD_WR_string>:
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	fc 01       	movw	r30, r24
 2b0:	16 c0       	rjmp	.+44     	; 0x2de <LCD_WR_string+0x36>
 2b2:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 2b6:	84 32       	cpi	r24, 0x24	; 36
 2b8:	c1 f0       	breq	.+48     	; 0x2ea <LCD_WR_string+0x42>
 2ba:	ca 30       	cpi	r28, 0x0A	; 10
 2bc:	39 f4       	brne	.+14     	; 0x2cc <LCD_WR_string+0x24>
 2be:	80 ec       	ldi	r24, 0xC0	; 192
 2c0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_CMD_8BIT>
 2c4:	80 e1       	ldi	r24, 0x10	; 16
 2c6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end>
 2ca:	08 c0       	rjmp	.+16     	; 0x2dc <LCD_WR_string+0x34>
 2cc:	80 31       	cpi	r24, 0x10	; 16
 2ce:	19 f4       	brne	.+6      	; 0x2d6 <LCD_WR_string+0x2e>
 2d0:	80 ec       	ldi	r24, 0xC0	; 192
 2d2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_CMD_8BIT>
 2d6:	8c 2f       	mov	r24, r28
 2d8:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_DATO_8bit>
 2dc:	f8 01       	movw	r30, r16
 2de:	8f 01       	movw	r16, r30
 2e0:	0f 5f       	subi	r16, 0xFF	; 255
 2e2:	1f 4f       	sbci	r17, 0xFF	; 255
 2e4:	c0 81       	ld	r28, Z
 2e6:	c1 11       	cpse	r28, r1
 2e8:	e4 cf       	rjmp	.-56     	; 0x2b2 <LCD_WR_string+0xa>
 2ea:	cf 91       	pop	r28
 2ec:	1f 91       	pop	r17
 2ee:	0f 91       	pop	r16
 2f0:	08 95       	ret

000002f2 <clear_home_counter>:
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_CMD_8BIT>
 2f8:	80 e8       	ldi	r24, 0x80	; 128
 2fa:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_CMD_8BIT>
 2fe:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__data_end>
 302:	08 95       	ret

00000304 <EEPROM_WRITE>:
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	8c 01       	movw	r16, r24
 30c:	c6 2f       	mov	r28, r22
 30e:	61 e0       	ldi	r22, 0x01	; 1
 310:	8c e3       	ldi	r24, 0x3C	; 60
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 49 00 	call	0x92	; 0x92 <uno_en_bit>
 318:	81 11       	cpse	r24, r1
 31a:	f9 cf       	rjmp	.-14     	; 0x30e <EEPROM_WRITE+0xa>
 31c:	1f bb       	out	0x1f, r17	; 31
 31e:	0e bb       	out	0x1e, r16	; 30
 320:	cd bb       	out	0x1d, r28	; 29
 322:	8c b3       	in	r24, 0x1c	; 28
 324:	84 60       	ori	r24, 0x04	; 4
 326:	8c bb       	out	0x1c, r24	; 28
 328:	8c b3       	in	r24, 0x1c	; 28
 32a:	82 60       	ori	r24, 0x02	; 2
 32c:	8c bb       	out	0x1c, r24	; 28
 32e:	cf 91       	pop	r28
 330:	1f 91       	pop	r17
 332:	0f 91       	pop	r16
 334:	08 95       	ret

00000336 <__vector_19>:
 336:	1f 92       	push	r1
 338:	0f 92       	push	r0
 33a:	0f b6       	in	r0, 0x3f	; 63
 33c:	0f 92       	push	r0
 33e:	11 24       	eor	r1, r1
 340:	0f 90       	pop	r0
 342:	0f be       	out	0x3f, r0	; 63
 344:	0f 90       	pop	r0
 346:	1f 90       	pop	r1
 348:	18 95       	reti

0000034a <__vector_14>:
 34a:	1f 92       	push	r1
 34c:	0f 92       	push	r0
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	0f 92       	push	r0
 352:	11 24       	eor	r1, r1
 354:	2f 93       	push	r18
 356:	3f 93       	push	r19
 358:	4f 93       	push	r20
 35a:	5f 93       	push	r21
 35c:	6f 93       	push	r22
 35e:	7f 93       	push	r23
 360:	8f 93       	push	r24
 362:	9f 93       	push	r25
 364:	af 93       	push	r26
 366:	bf 93       	push	r27
 368:	ef 93       	push	r30
 36a:	ff 93       	push	r31
 36c:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <estado>
 370:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <estado+0x1>
 374:	89 2b       	or	r24, r25
 376:	81 f4       	brne	.+32     	; 0x398 <__vector_14+0x4e>
 378:	65 b1       	in	r22, 0x05	; 5
 37a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <lugar>
 37e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <lugar+0x1>
 382:	0e 94 82 01 	call	0x304	; 0x304 <EEPROM_WRITE>
 386:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <lugar>
 38a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <lugar+0x1>
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <lugar+0x1>
 394:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <lugar>
 398:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <lugar>
 39c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <lugar+0x1>
 3a0:	81 15       	cp	r24, r1
 3a2:	92 40       	sbci	r25, 0x02	; 2
 3a4:	39 f4       	brne	.+14     	; 0x3b4 <__vector_14+0x6a>
 3a6:	13 be       	out	0x33, r1	; 51
 3a8:	0e 94 79 01 	call	0x2f2	; 0x2f2 <clear_home_counter>
 3ac:	80 e6       	ldi	r24, 0x60	; 96
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LCD_WR_string>
 3b4:	ff 91       	pop	r31
 3b6:	ef 91       	pop	r30
 3b8:	bf 91       	pop	r27
 3ba:	af 91       	pop	r26
 3bc:	9f 91       	pop	r25
 3be:	8f 91       	pop	r24
 3c0:	7f 91       	pop	r23
 3c2:	6f 91       	pop	r22
 3c4:	5f 91       	pop	r21
 3c6:	4f 91       	pop	r20
 3c8:	3f 91       	pop	r19
 3ca:	2f 91       	pop	r18
 3cc:	0f 90       	pop	r0
 3ce:	0f be       	out	0x3f, r0	; 63
 3d0:	0f 90       	pop	r0
 3d2:	1f 90       	pop	r1
 3d4:	18 95       	reti

000003d6 <USART_Init>:
 3d6:	91 b3       	in	r25, 0x11	; 17
 3d8:	92 60       	ori	r25, 0x02	; 2
 3da:	91 bb       	out	0x11, r25	; 17
 3dc:	10 bc       	out	0x20, r1	; 32
 3de:	89 b9       	out	0x09, r24	; 9
 3e0:	88 e9       	ldi	r24, 0x98	; 152
 3e2:	8a b9       	out	0x0a, r24	; 10
 3e4:	86 e8       	ldi	r24, 0x86	; 134
 3e6:	80 bd       	out	0x20, r24	; 32
 3e8:	08 95       	ret

000003ea <SendByte>:
 3ea:	5d 9b       	sbis	0x0b, 5	; 11
 3ec:	fe cf       	rjmp	.-4      	; 0x3ea <SendByte>
 3ee:	8c b9       	out	0x0c, r24	; 12
 3f0:	08 95       	ret

000003f2 <__vector_11>:
 3f2:	1f 92       	push	r1
 3f4:	0f 92       	push	r0
 3f6:	0f b6       	in	r0, 0x3f	; 63
 3f8:	0f 92       	push	r0
 3fa:	11 24       	eor	r1, r1
 3fc:	8f 93       	push	r24
 3fe:	8c b1       	in	r24, 0x0c	; 12
 400:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <cereal>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <listo_serial>
 40a:	8f 91       	pop	r24
 40c:	0f 90       	pop	r0
 40e:	0f be       	out	0x3f, r0	; 63
 410:	0f 90       	pop	r0
 412:	1f 90       	pop	r1
 414:	18 95       	reti

00000416 <SPI_INIT_MASTER>:
 416:	1d b8       	out	0x0d, r1	; 13
 418:	80 eb       	ldi	r24, 0xB0	; 176
 41a:	87 bb       	out	0x17, r24	; 23
 41c:	83 e5       	ldi	r24, 0x53	; 83
 41e:	8d b9       	out	0x0d, r24	; 13
 420:	1a ba       	out	0x1a, r1	; 26
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	8b bb       	out	0x1b, r24	; 27
 426:	88 b3       	in	r24, 0x18	; 24
 428:	80 61       	ori	r24, 0x10	; 16
 42a:	88 bb       	out	0x18, r24	; 24
 42c:	08 95       	ret

0000042e <Instruction_Write>:
 42e:	8f 77       	andi	r24, 0x7F	; 127
 430:	98 b3       	in	r25, 0x18	; 24
 432:	9f 7e       	andi	r25, 0xEF	; 239
 434:	98 bb       	out	0x18, r25	; 24
 436:	8f b9       	out	0x0f, r24	; 15
 438:	77 9b       	sbis	0x0e, 7	; 14
 43a:	fe cf       	rjmp	.-4      	; 0x438 <Instruction_Write+0xa>
 43c:	6f b9       	out	0x0f, r22	; 15
 43e:	77 9b       	sbis	0x0e, 7	; 14
 440:	fe cf       	rjmp	.-4      	; 0x43e <Instruction_Write+0x10>
 442:	88 b3       	in	r24, 0x18	; 24
 444:	80 61       	ori	r24, 0x10	; 16
 446:	88 bb       	out	0x18, r24	; 24
 448:	8f b1       	in	r24, 0x0f	; 15
 44a:	08 95       	ret

0000044c <ReadChannel>:
 44c:	98 b3       	in	r25, 0x18	; 24
 44e:	9f 7e       	andi	r25, 0xEF	; 239
 450:	98 bb       	out	0x18, r25	; 24
 452:	80 68       	ori	r24, 0x80	; 128
 454:	8f b9       	out	0x0f, r24	; 15
 456:	77 9b       	sbis	0x0e, 7	; 14
 458:	fe cf       	rjmp	.-4      	; 0x456 <ReadChannel+0xa>
 45a:	8f b1       	in	r24, 0x0f	; 15
 45c:	1f b8       	out	0x0f, r1	; 15
 45e:	77 9b       	sbis	0x0e, 7	; 14
 460:	fe cf       	rjmp	.-4      	; 0x45e <ReadChannel+0x12>
 462:	8f b1       	in	r24, 0x0f	; 15
 464:	98 b3       	in	r25, 0x18	; 24
 466:	90 61       	ori	r25, 0x10	; 16
 468:	98 bb       	out	0x18, r25	; 24
 46a:	08 95       	ret

0000046c <ReadChip>:
 46c:	cf 93       	push	r28
 46e:	df 93       	push	r29
 470:	ec 01       	movw	r28, r24
 472:	80 e3       	ldi	r24, 0x30	; 48
 474:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 478:	88 83       	st	Y, r24
 47a:	8a e1       	ldi	r24, 0x1A	; 26
 47c:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 480:	89 83       	std	Y+1, r24	; 0x01
 482:	89 e1       	ldi	r24, 0x19	; 25
 484:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 488:	8a 83       	std	Y+2, r24	; 0x02
 48a:	87 e3       	ldi	r24, 0x37	; 55
 48c:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 490:	8b 83       	std	Y+3, r24	; 0x03
 492:	88 e3       	ldi	r24, 0x38	; 56
 494:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 498:	8c 83       	std	Y+4, r24	; 0x04
 49a:	89 e3       	ldi	r24, 0x39	; 57
 49c:	0e 94 26 02 	call	0x44c	; 0x44c <ReadChannel>
 4a0:	8d 83       	std	Y+5, r24	; 0x05
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	08 95       	ret

000004a8 <InicializarChip>:
 4a8:	61 e1       	ldi	r22, 0x11	; 17
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4b0:	63 e0       	ldi	r22, 0x03	; 3
 4b2:	8a e0       	ldi	r24, 0x0A	; 10
 4b4:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4b8:	63 e0       	ldi	r22, 0x03	; 3
 4ba:	8c e0       	ldi	r24, 0x0C	; 12
 4bc:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4c0:	69 e0       	ldi	r22, 0x09	; 9
 4c2:	83 e1       	ldi	r24, 0x13	; 19
 4c4:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4c8:	64 e0       	ldi	r22, 0x04	; 4
 4ca:	82 e1       	ldi	r24, 0x12	; 18
 4cc:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4d0:	66 e3       	ldi	r22, 0x36	; 54
 4d2:	84 e1       	ldi	r24, 0x14	; 20
 4d4:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4d8:	68 e0       	ldi	r22, 0x08	; 8
 4da:	81 e2       	ldi	r24, 0x21	; 33
 4dc:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4e0:	60 e8       	ldi	r22, 0x80	; 128
 4e2:	82 e2       	ldi	r24, 0x22	; 34
 4e4:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4e8:	68 e0       	ldi	r22, 0x08	; 8
 4ea:	87 e2       	ldi	r24, 0x27	; 39
 4ec:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4f0:	60 e1       	ldi	r22, 0x10	; 16
 4f2:	8f e2       	ldi	r24, 0x2F	; 47
 4f4:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	0e 94 17 02 	call	0x42e	; 0x42e <Instruction_Write>
 500:	08 95       	ret

00000502 <main>:
}

int main(void)
{
	
	DDRC = 0xFF;
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
 506:	85 bb       	out	0x15, r24	; 21
 508:	2f ef       	ldi	r18, 0xFF	; 255
 50a:	39 e6       	ldi	r19, 0x69	; 105
 50c:	98 e1       	ldi	r25, 0x18	; 24
 50e:	21 50       	subi	r18, 0x01	; 1
 510:	30 40       	sbci	r19, 0x00	; 0
 512:	90 40       	sbci	r25, 0x00	; 0
 514:	e1 f7       	brne	.-8      	; 0x50e <main+0xc>
 516:	00 c0       	rjmp	.+0      	; 0x518 <main+0x16>
 518:	00 00       	nop
	_delay_ms(1000);
	PORTC = 0;
 51a:	15 ba       	out	0x15, r1	; 21
	DDRA = 0;
 51c:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0xFF;
 51e:	8b bb       	out	0x1b, r24	; 27
	sei();
 520:	78 94       	sei
	USART_Init(MYUBRR);
 522:	83 e3       	ldi	r24, 0x33	; 51
 524:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <USART_Init>
	SPI_INIT_MASTER();
 528:	0e 94 0b 02 	call	0x416	; 0x416 <SPI_INIT_MASTER>
	InicializarChip();
 52c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <InicializarChip>
	
	
	read[0] = read[1] = read[2] = 0;
 530:	e2 e7       	ldi	r30, 0x72	; 114
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	12 82       	std	Z+2, r1	; 0x02
 536:	11 82       	std	Z+1, r1	; 0x01
 538:	10 82       	st	Z, r1
 53a:	8f e1       	ldi	r24, 0x1F	; 31
 53c:	9e e4       	ldi	r25, 0x4E	; 78
 53e:	01 97       	sbiw	r24, 0x01	; 1
 540:	f1 f7       	brne	.-4      	; 0x53e <main+0x3c>
 542:	00 c0       	rjmp	.+0      	; 0x544 <main+0x42>
 544:	00 00       	nop
	
	while(1){
		_delay_ms(10);
		while((PINA & (1<<1))) {}
 546:	c9 99       	sbic	0x19, 1	; 25
 548:	fe cf       	rjmp	.-4      	; 0x546 <main+0x44>
		ReadChip(read);
 54a:	82 e7       	ldi	r24, 0x72	; 114
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 36 02 	call	0x46c	; 0x46c <ReadChip>
		SendByte(read[3]);
 552:	c2 e7       	ldi	r28, 0x72	; 114
 554:	d0 e0       	ldi	r29, 0x00	; 0
 556:	8b 81       	ldd	r24, Y+3	; 0x03
 558:	0e 94 f5 01 	call	0x3ea	; 0x3ea <SendByte>
		SendByte(read[4]);
 55c:	8c 81       	ldd	r24, Y+4	; 0x04
 55e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <SendByte>
		SendByte(read[5]);
 562:	8d 81       	ldd	r24, Y+5	; 0x05
 564:	0e 94 f5 01 	call	0x3ea	; 0x3ea <SendByte>
		SendByte('\n');
 568:	8a e0       	ldi	r24, 0x0A	; 10
 56a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <SendByte>
	}
 56e:	e5 cf       	rjmp	.-54     	; 0x53a <main+0x38>

00000570 <_exit>:
 570:	f8 94       	cli

00000572 <__stop_program>:
 572:	ff cf       	rjmp	.-2      	; 0x572 <__stop_program>
